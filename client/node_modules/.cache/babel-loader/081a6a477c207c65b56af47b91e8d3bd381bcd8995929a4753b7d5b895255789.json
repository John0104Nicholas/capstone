{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { taskListReducer, taskDetailsReducer, taskCreateReducer, taskUpdateReducer, taskDeleteReducer } from './reducers/taskReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  taskList: taskListReducer,\n  taskDetails: taskDetailsReducer,\n  taskCreate: taskCreateReducer,\n  taskUpdate: taskUpdateReducer,\n  taskDelete: taskDeleteReducer\n});\n\n// Get user info from localStorage if available\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","taskListReducer","taskDetailsReducer","taskCreateReducer","taskUpdateReducer","taskDeleteReducer","reducer","userLogin","userRegister","taskList","taskDetails","taskCreate","taskUpdate","taskDelete","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["/Users/johnnicholas/Downloads/guvi_capstone/client/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { taskListReducer, taskDetailsReducer, taskCreateReducer, taskUpdateReducer, taskDeleteReducer } from './reducers/taskReducers';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  taskList: taskListReducer,\n  taskDetails: taskDetailsReducer,\n  taskCreate: taskCreateReducer,\n  taskUpdate: taskUpdateReducer,\n  taskDelete: taskDeleteReducer,\n});\n\n// Get user info from localStorage if available\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store; "],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,yBAAyB;AAC/E,SAASC,eAAe,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,yBAAyB;AAEtI,MAAMC,OAAO,GAAGX,eAAe,CAAC;EAC9BY,SAAS,EAAER,gBAAgB;EAC3BS,YAAY,EAAER,mBAAmB;EACjCS,QAAQ,EAAER,eAAe;EACzBS,WAAW,EAAER,kBAAkB;EAC/BS,UAAU,EAAER,iBAAiB;EAC7BS,UAAU,EAAER,iBAAiB;EAC7BS,UAAU,EAAER;AACd,CAAC,CAAC;;AAEF;AACA,MAAMS,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,YAAY,GAAG;EACnBZ,SAAS,EAAE;IAAEa,QAAQ,EAAEN;EAAoB;AAC7C,CAAC;AAED,MAAMO,UAAU,GAAG,CAACxB,KAAK,CAAC;AAE1B,MAAMyB,KAAK,GAAG5B,WAAW,CACvBY,OAAO,EACPa,YAAY,EACZrB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}