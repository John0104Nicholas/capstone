{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../constants/userConstants';\n\n// Login user\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${config.API_URL}/api/users/login`, {\n      email,\n      password\n    }, axiosConfig);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Logout user\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\n// Register user\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${config.API_URL}/api/users/register`, {\n      name,\n      email,\n      password\n    }, axiosConfig);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n\n    // Log user in immediately after registration\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","config","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","login","email","password","dispatch","type","axiosConfig","headers","data","post","API_URL","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name"],"sources":["/Users/johnnicholas/Downloads/guvi_capstone/client/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios';\nimport config from '../config';\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from '../constants/userConstants';\n\n// Login user\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${config.API_URL}/api/users/login`,\n      { email, password },\n      axiosConfig\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Logout user\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\n\n// Register user\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      `${config.API_URL}/api/users/register`,\n      { name, email, password },\n      axiosConfig\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    // Log user in immediately after registration\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,SACEC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,WAAW,EACXC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,QACb,4BAA4B;;AAEnC;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAmB,CAAC,CAAC;IAEtC,MAAMY,WAAW,GAAG;MAClBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,GAAGhB,MAAM,CAACiB,OAAO,kBAAkB,EACnC;MAAER,KAAK;MAAEC;IAAS,CAAC,EACnBG,WACF,CAAC;IAEDF,QAAQ,CAAC;MACPC,IAAI,EAAEV,kBAAkB;MACxBgB,OAAO,EAAEH;IACX,CAAC,CAAC;IAEFI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAET,eAAe;MACrBe,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACU,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACU,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAOf,QAAQ,IAAK;EACxCQ,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnChB,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAY,CAAC,CAAC;AACjC,CAAC;;AAED;AACA,OAAO,MAAMwB,QAAQ,GAAGA,CAACC,IAAI,EAAEpB,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACrE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAsB,CAAC,CAAC;IAEzC,MAAMQ,WAAW,GAAG;MAClBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,GAAGhB,MAAM,CAACiB,OAAO,qBAAqB,EACtC;MAAEY,IAAI;MAAEpB,KAAK;MAAEC;IAAS,CAAC,EACzBG,WACF,CAAC;IAEDF,QAAQ,CAAC;MACPC,IAAI,EAAEN,qBAAqB;MAC3BY,OAAO,EAAEH;IACX,CAAC,CAAC;;IAEF;IACAJ,QAAQ,CAAC;MACPC,IAAI,EAAEV,kBAAkB;MACxBgB,OAAO,EAAEH;IACX,CAAC,CAAC;IAEFI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAEL,kBAAkB;MACxBW,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACU,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACT,IAAI,CAACU,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}