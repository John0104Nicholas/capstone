{"ast":null,"code":"var _jsxFileName = \"/Users/johnnicholas/Downloads/guvi_capstone/client/src/components/TaskItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onDelete\n}) => {\n  // Format date\n  const formatDate = dateString => {\n    if (!dateString) return 'No due date';\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Get status class\n  const getStatusClass = status => {\n    switch (status) {\n      case 'todo':\n        return 'status-todo';\n      case 'in-progress':\n        return 'status-progress';\n      case 'completed':\n        return 'status-completed';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${getStatusClass(task.status)}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/task/${task._id}/edit`,\n          className: \"btn-edit\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDelete,\n          className: \"btn-delete\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-description\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"task-date\",\n        children: [\"Due: \", formatDate(task.dueDate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `task-status ${getStatusClass(task.status)}`,\n        children: task.status.charAt(0).toUpperCase() + task.status.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","TaskItem","task","onDelete","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","getStatusClass","status","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","to","_id","onClick","description","dueDate","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/johnnicholas/Downloads/guvi_capstone/client/src/components/TaskItem.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TaskItem = ({ task, onDelete }) => {\n  // Format date\n  const formatDate = (dateString) => {\n    if (!dateString) return 'No due date';\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Get status class\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 'todo':\n        return 'status-todo';\n      case 'in-progress':\n        return 'status-progress';\n      case 'completed':\n        return 'status-completed';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className={`task-item ${getStatusClass(task.status)}`}>\n      <div className=\"task-header\">\n        <h3>{task.title}</h3>\n        <div className=\"task-actions\">\n          <Link to={`/task/${task._id}/edit`} className=\"btn-edit\">\n            <i className=\"fas fa-edit\"></i>\n          </Link>\n          <button onClick={onDelete} className=\"btn-delete\">\n            <i className=\"fas fa-trash\"></i>\n          </button>\n        </div>\n      </div>\n      <p className=\"task-description\">{task.description}</p>\n      <div className=\"task-footer\">\n        <span className=\"task-date\">Due: {formatDate(task.dueDate)}</span>\n        <span className={`task-status ${getStatusClass(task.status)}`}>\n          {task.status.charAt(0).toUpperCase() + task.status.slice(1)}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskItem; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}